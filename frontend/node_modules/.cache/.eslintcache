[{"/Users/param/Desktop/marketplace/final/frontend/src/index.js":"1","/Users/param/Desktop/marketplace/final/frontend/src/reportWebVitals.js":"2","/Users/param/Desktop/marketplace/final/frontend/src/App.js":"3","/Users/param/Desktop/marketplace/final/frontend/src/store.js":"4","/Users/param/Desktop/marketplace/final/frontend/src/screens/CartScreen.js":"5","/Users/param/Desktop/marketplace/final/frontend/src/screens/ProductScreen.js":"6","/Users/param/Desktop/marketplace/final/frontend/src/screens/TransactionScreen.js":"7","/Users/param/Desktop/marketplace/final/frontend/src/screens/CreateProductScreen.js":"8","/Users/param/Desktop/marketplace/final/frontend/src/screens/HomeScreen.js":"9","/Users/param/Desktop/marketplace/final/frontend/src/screens/SigninScreen.js":"10","/Users/param/Desktop/marketplace/final/frontend/src/screens/RegisterScreen.js":"11","/Users/param/Desktop/marketplace/final/frontend/src/reducers/productReducers.js":"12","/Users/param/Desktop/marketplace/final/frontend/src/actions/userActions.js":"13","/Users/param/Desktop/marketplace/final/frontend/src/reducers/userReducers.js":"14","/Users/param/Desktop/marketplace/final/frontend/src/reducers/cartReducers.js":"15","/Users/param/Desktop/marketplace/final/frontend/src/actions/cartActions.js":"16","/Users/param/Desktop/marketplace/final/frontend/src/actions/productActions.js":"17","/Users/param/Desktop/marketplace/final/frontend/src/components/LoadingBox.js":"18","/Users/param/Desktop/marketplace/final/frontend/src/components/MessageBox.js":"19","/Users/param/Desktop/marketplace/final/frontend/src/components/Product.js":"20","/Users/param/Desktop/marketplace/final/frontend/src/constants/productConstants.js":"21","/Users/param/Desktop/marketplace/final/frontend/src/constants/userConstants.js":"22","/Users/param/Desktop/marketplace/final/frontend/src/constants/cartConstants.js":"23"},{"size":614,"mtime":1620436141000,"results":"24","hashOfConfig":"25"},{"size":362,"mtime":1620436141000,"results":"26","hashOfConfig":"25"},{"size":3214,"mtime":1620436141000,"results":"27","hashOfConfig":"25"},{"size":1106,"mtime":1620436141000,"results":"28","hashOfConfig":"25"},{"size":4517,"mtime":1620436141000,"results":"29","hashOfConfig":"25"},{"size":9071,"mtime":1620436141000,"results":"30","hashOfConfig":"25"},{"size":4337,"mtime":1620436141000,"results":"31","hashOfConfig":"25"},{"size":4940,"mtime":1620436141000,"results":"32","hashOfConfig":"25"},{"size":1248,"mtime":1620436141000,"results":"33","hashOfConfig":"25"},{"size":2563,"mtime":1620436141000,"results":"34","hashOfConfig":"25"},{"size":4626,"mtime":1620436141000,"results":"35","hashOfConfig":"25"},{"size":1081,"mtime":1620436141000,"results":"36","hashOfConfig":"25"},{"size":2068,"mtime":1620536169425,"results":"37","hashOfConfig":"25"},{"size":1092,"mtime":1620436141000,"results":"38","hashOfConfig":"25"},{"size":1542,"mtime":1620436141000,"results":"39","hashOfConfig":"25"},{"size":1775,"mtime":1620582620015,"results":"40","hashOfConfig":"25"},{"size":4076,"mtime":1620541072242,"results":"41","hashOfConfig":"25"},{"size":338,"mtime":1620436141000,"results":"42","hashOfConfig":"25"},{"size":202,"mtime":1620436141000,"results":"43","hashOfConfig":"25"},{"size":1082,"mtime":1620436141000,"results":"44","hashOfConfig":"25"},{"size":555,"mtime":1620436141000,"results":"45","hashOfConfig":"25"},{"size":387,"mtime":1620436141000,"results":"46","hashOfConfig":"25"},{"size":144,"mtime":1620436141000,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1xo5xcg",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"/Users/param/Desktop/marketplace/final/frontend/src/index.js",[],["100","101"],"/Users/param/Desktop/marketplace/final/frontend/src/reportWebVitals.js",[],"/Users/param/Desktop/marketplace/final/frontend/src/App.js",[],"/Users/param/Desktop/marketplace/final/frontend/src/store.js",[],"/Users/param/Desktop/marketplace/final/frontend/src/screens/CartScreen.js",["102","103","104"],"import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { addToCart, removeFromCart, checkout } from '../actions/cartActions';\nimport MessageBox from '../components/MessageBox';\nimport HomeScreen from './HomeScreen';\n\nexport default function CartScreen(props){\n    const product_id = props.match.params.id;\n\n    //returns the quantity of the particular product which is  selected.\n    const quantity = props.location.search ? Number(props.location.search.split('=')[1]):1;\n        \n    //defining the dispatch.\n    const dispatch = useDispatch();\n\n    const cart = useSelector(state => state.cart);\n    // getting the items from the cart.    \n    const {itemsInCart} = cart;\n\n    const removeFromCartHandler = (id) =>{\n        //implement the deletion of the items.\n        dispatch(removeFromCart(id));\n    };\n\n    const checkoutHandler = () =>{\n        //unsure about implementation.\n        dispatch(checkout())\n\n        // returning back to the HomeScreen.\n        props.history.push(`/transaction`);\n    }\n\n    useEffect(() =>{\n        if(product_id){\n            dispatch(addToCart(product_id, quantity));\n        }\n    }, [dispatch, product_id, quantity]);\n\n\n\n    return (\n        <div className=\"row top\">\n            <br>\n            </br>\n            <p>\n                <br></br>\n            </p>\n            <br></br>\n            <div><Link to=\"/\"> Go back to shopping</Link></div>\n            {/* <br></br> */}\n            <p></p>\n            <p></p>\n            {/* <div></div> */}\n            <div className=\"col-2\"><h2>Shopping Cart</h2>\n                {itemsInCart.length === 0 ?                                        \n                    <MessageBox style=\"background-color: white\">                     \n                    <div className = \"img-container\" alt=\"\"><img src=\"/images/images.jpg\" ></img></div>\n                    <p> Oopps!<br></br>The cart is currently empty.<br></br>\n                    <br></br>\n                    <Link to=\"/\">Go back to shopping and choose the freshies!</Link>\n                    </p>\n                    </MessageBox>                    \n                    :(\n                    <ul>\n                        {itemsInCart.map((item) => \n                        <li key = {item.product}> \n                        <div className=\"row\">\n                            <div>\n                                <img src={item.image} alt = {item.name} className=\"small\"></img>\n                            </div>\n                            <div className=\"min-30\"><Link to={`/product/${item.product}`}>{item.name}</Link></div>\n                            <div><select value={item.quantity} \n                            onChange={(e) =>{\n                                dispatch( \n                                    addToCart(item.product, Number(e.target.value)))\n                            }}>\n                              {\n                                // returning an array from 0 to that number in stock\n                                [...Array(item.countInStock).keys()].map( (x) =>(\n                                    <option key={x+1} value={ x + 1}>{x + 1}</option>\n                                ))\n                              }  \n                            </select>\n                            </div>\n                            <div>\n                                ${item.price}\n                            </div>\n                            <div>\n                                <button type=\"button\" onClick = {() => removeFromCartHandler(item.product)}>Delete Items</button>\n                            </div>\n                        </div> \n                        </li>)}\n                    </ul>\n                )}\n            </div>\n            <div className=\"col-1\">\n                <br></br>\n                <br></br>\n                <div className=\"card card-body\">\n                    <ul>\n                    <br>\n                    </br>\n                        <li><h2>Subtotal ({itemsInCart.reduce((a,c) => a + c.quantity , 0)} items) :${itemsInCart.reduce((a,c) => a + (c.price * c.quantity), 0)}\n                        </h2></li>\n                        <br></br>\n                        <li><button type=\"button\" onClick={checkoutHandler} className=\"primary block\" disabled={itemsInCart.length === 0 }> Proceed to Checkout</button></li>\n                    </ul>\n\n                </div>\n\n            </div>\n        </div>\n    );\n}","/Users/param/Desktop/marketplace/final/frontend/src/screens/ProductScreen.js",["105","106","107","108","109"],"import React, { useEffect, useState } from 'react';\nimport { Link, Route } from 'react-router-dom';\n// import Product from '../components/Product.js';\nimport { detailsProduct} from '../actions/productActions';\nimport {useDispatch, useSelector} from 'react-redux';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport CartScreen from './CartScreen';\nimport { addToCart, removeFromCart } from '../actions/cartActions';\n\n\nexport default function ProductScreen(props) {\n    //loading product details from redux store.js\n    const dispatch = useDispatch();\n    const product_id = props.match.params.id;\n\n    const [quantity, setQuantity] = useState(1);\n    const [location, setLocation] = useState('');\n    const productDetails = useSelector( state => state.productDetails);\n    const { loading, error, product} = productDetails;\n\n    const cart = useSelector(state => state.cart);\n    const {itemsInCart} = cart;\n    \n    \n    //won't show products from the static file in the frontend, \n   // const product = data.products.find(x => x._id === props.match.params.id);\n    \n   useEffect(() =>{\n       dispatch(detailsProduct(product_id));\n   }, [dispatch, product_id]);\n   \n   //defining the addToCartHandler\n   const addToCartHandler = () =>{\n        props.history.push(`/cart/${product_id} ? quantity=${quantity}`);\n     //  props.history.push(`/cart/${product_id} ? location=${product_id}`);\n       \n   };\n      \n    // if and else were the other way around earlier.\n    if(product){\n        //return <div> Could not find the product you requested. </div>\n        \n        return(\n        <div>\n            { loading ? (\n                <LoadingBox></LoadingBox>\n            ) : error? (\n                <MessageBox variant=\"danger\">{error}</MessageBox>\n            ) : (\n                <div>\n                <Link to=\"/\">Back to HomeScreen</Link>\n                <br></br>\n                <p></p>\n                <div className=\"row top\"> \n                <br></br>\n                {/* <li></li> */}\n                <p></p>\n                    <div className = \"col-2\">\n                        <img className = \"large\" src={product.image} alt = {product.name}></img>\n                    </div>\n                    <div className=\"col-1\">\n                        <ul>\n                            <li>\n                                <h1>{product.name}</h1>\n                            </li>\n                            <li>\n                               <b> Price:</b>  ${product.price}\n                            </li>\n                            <li>\n                                <b>Nutritional Facts: </b>\n                                <p>\n                                    {product.description}\n                                </p>\n                            </li>\n                            <li>\n                                <b>Location Origin: </b> {product.location}                               \n                            </li>\n                            <li>\n                            {/* <b>Locations: </b> */}\n                                <p>\n                                    {/* {product.product_id[0].location }  */}\n                                    <li>\n                                    {/* <button onClick ={addToCartHandler}className=\"primary block\"> Add to Cart</button> */}\n                                    </li>\n                                </p>\n                                {/* <p>{product.product_id[1].location }</p> */}\n                            </li>\n                        </ul>\n                    </div>\n                    <div className=\"col-1\">\n                        <div className=\"card card-body\">\n                            <ul>\n                                <li>\n                                    <div className=\"row\">\n                                        <div>Price</div>\n                                        <div className=\"price\">$ {product.price}</div>\n                                    </div>\n                                </li>\n                                <li>\n                                    <div className=\"row\">\n                                        <div>Status</div>\n                                        <div>\n                                            {product.countInStock > 0 ? (\n                                                <span className=\"success\"> In Stock</span>\n                                            ) : (\n                                                <span className=\"danger\">Unavailable</span>\n                                            )}\n                                        </div>\n                                    </div>\n                                </li>\n                                {\n                                    product.countInStock > 0 && (\n                                <>\n                                <li>\n                                    <div className=\"row\">\n                                        <div>\n                                           Quantity \n                                        </div>\n                                        <div>\n                                            <select value={quantity} onChange={e => setQuantity(e.target.value)}>\n                                                {\n                                                    // returning an array from 0 to that number in stock\n                                                    [...Array(product.countInStock).keys()].map( (x) =>(\n                                                        <option key={x+1} value={ x + 1}>{x + 1}</option>\n                                                    ))\n                                                }\n                                            </select>\n                                        </div>\n                                    </div>                 \n                                </li>     \n                                <li>                            \n                                \n                                    <button onClick ={addToCartHandler}className=\"primary block\"> Add to Cart</button>\n                                </li> \n                                </>                                 \n                                    )\n                                }\n                                                          \n                            </ul>\n                        </div>\n\n                    </div>\n                    {/* to show what is already in the cart on the right side of the screen */}\n                    <div className=\"col-1\">\n                        <div className=\"card card-body\">\n                            {/* <Route path=\"/cart/:id?\" component={CartScreen}></Route> */}\n                        <h2>Shopping Cart</h2>\n                        <ul>\n                        {itemsInCart.map((item) => \n                        <li key = {item.product}> \n                        <div className=\"row\">\n                            <div>\n                                <img src={item.image} alt = {item.name} className=\"MoreSmall\"></img>\n                                &nbsp;\n                                {/* <div className=\"min-30\"><Link to={`/product/${item.product}`}>{item.name}</Link></div> */}\n                                <b>&nbsp;<Link to={`/product/${item.product}`}>{item.name}</Link></b>\n                                {/* ${item.price} */}\n                            </div>\n                            {/* <div className=\"min-30\"><Link to={`/product/${item.product}`}>{item.name}</Link></div> */}\n                           \n                            <div>\n                                Quantity: {item.quantity}\n                                <select value={item.quantity} \n                                    onChange={(e) =>{\n                                        dispatch( \n                                            addToCart(item.product, Number(e.target.value)))\n                                    }}>\n                                    {\n                                        // returning an array from 0 to that number in stock\n                                        [...Array(item.countInStock).keys()].map( (x) =>(\n                                            <option key={x+1} value={ x + 1}>{x + 1}</option>\n                                        ))\n                                    }  \n                             </select>\n                            {/* ${item.price} */}\n                            </div>\n\n                            <div>\n                                ${item.price}\n                            </div>\n                        </div> \n                        </li>)}\n                    </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n         \n            )}       \n        </div>\n        )\n    }\n    return(\n        <div> Could not find the product you requested. </div>       \n             \n    );\n}","/Users/param/Desktop/marketplace/final/frontend/src/screens/TransactionScreen.js",["110","111","112","113","114","115"],"import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { addToCart, removeFromCart, checkout } from '../actions/cartActions';\nimport MessageBox from '../components/MessageBox';\nimport HomeScreen from './HomeScreen';\n\nexport default function TransactionScreen(props){\n    const product_id = props.match.params.id;\n\n    //returns the quantity of the particular product which is  selected.\n    const quantity = props.location.search ? Number(props.location.search.split('=')[1]):1;\n        \n    //defining the dispatch.\n    const dispatch = useDispatch();\n\n    const cart = useSelector(state => state.cart);\n    // getting the items from the cart.    \n    const {itemsInCart} = cart;\n\n    const removeFromCartHandler = (id) =>{\n        //implement the deletion of the items.\n        dispatch(removeFromCart(id));\n    };\n\n    const checkoutHandler = () =>{\n        //unsure about implementation.\n        dispatch(checkout())\n\n        // returning back to the HomeScreen.\n        props.history.push(`/`);\n    }\n\n    useEffect(() =>{\n        if(product_id){\n            dispatch(addToCart(product_id, quantity));\n        }\n    }, [dispatch, product_id, quantity]);\n\n    return (\n        <div className=\"row top\">\n            <br>\n            </br>\n            <p>\n                <br></br>\n            </p>\n            <br></br>\n            <div><Link to=\"/\"> Go back to shopping</Link></div>\n            {/* <br></br> */}\n            <p></p>\n            <p></p>\n            {/* <div></div> */}\n            <div className=\"col-2\"><br></br><h1><br></br>Transaction in process...</h1>\n            <img src=\"/images/thankyou.jpg\" ></img>\n            {/* <MessageBox style=\"background-color: white\">                      */}\n                    {/* <div className = \"img-container\" alt=\"\"><img src=\"/images/thanyou.jpg\" ></img></div> */}\n                    <p><br></br><b>See you soon!</b><br></br>\n                    <br></br>\n                    <Link to=\"/\">Want to shop again!</Link>\n                    </p>\n            {/* </MessageBox> */}\n                {/* {itemsInCart.length === 0 ?                                        \n                    <MessageBox style=\"background-color: white\">                     \n                    <div className = \"img-container\" alt=\"\"><img src=\"/images/thanyou.jpg\" ></img></div>\n                    <p> Oopps!<br></br>The cart is currently empty.<br></br>\n                    <br></br>\n                    <Link to=\"/\">Go back to shopping and choose the freshies!</Link>\n                    </p>\n                    </MessageBox>                    \n                    :(\n                    <ul>\n                        {itemsInCart.map((item) => \n                        <li key = {item.product}> \n                        <div className=\"row\">\n                            <div>\n                                <img src={item.image} alt = {item.name} className=\"small\"></img>\n                            </div>\n                            <div className=\"min-30\"><Link to={`/product/${item.product}`}>{item.name}</Link></div>\n                            <div><select value={item.quantity} \n                            onChange={(e) =>{\n                                dispatch( \n                                    addToCart(item.product, Number(e.target.value)))\n                            }}>\n                              {\n                                // returning an array from 0 to that number in stock\n                                [...Array(item.countInStock).keys()].map( (x) =>(\n                                    <option key={x+1} value={ x + 1}>{x + 1}</option>\n                                ))\n                              }  \n                            </select>\n                            </div>\n                            <div>\n                                ${item.price}\n                            </div>\n                            <div>\n                                <button type=\"button\" onClick = {() => removeFromCartHandler(item.product)}>Delete Items</button>\n                            </div>\n                        </div> \n                        </li>)}\n                    </ul>\n                )} */}\n            </div>\n            \n        </div>\n    );\n}","/Users/param/Desktop/marketplace/final/frontend/src/screens/CreateProductScreen.js",["116","117","118","119","120"],"import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { createProduct } from '../actions/productActions';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\n\n\nexport default function CreateProductScreen(props){\n\n    \n\n    // defining the constants\n    const dispatch = useDispatch();\n    const[productName, setProductName] = useState('');\n    const[location, setLocation] = useState('');\n    const[description, setDescription] = useState('');\n    const[countInStock, setCountInStock] = useState(1);\n    const[price, setPrice] = useState('');\n    const[image, setImage] = useState('');    \n\n    const redirect = props.location.search ? props.location.search.split('=')[1] : '/';\n\n    const newProduct = useSelector((state)=> state.newProduct);\n    //  const { productInfo, loading, error} = newProduct;\n\n    const submitHandler= (e)=> {\n        e.preventDefault();\n        console.log(productName + \" \" + location + \" \"+ description + \" \"+ countInStock+\" \"+ price + \" \"+image  );\n         dispatch(createProduct(productName, location, description, countInStock, price, image));\n    }\n\n    useEffect(() => {\n        //  if(productInfo){\n            console.log(\"hello\");\n            dispatch(createProduct(productName, location, description, countInStock, price));\n\n            //  props.history.push(redirect);\n\n\n        //  }\n    },\n    []);\n    \n\n    return(\n        <div>\n            <form className = \"form\" onSubmit= {submitHandler}>\n                <div>\n                    <h1> Create and Add a New Product</h1>\n                </div>\n                {/* {loading && <LoadingBox></LoadingBox>}\n                {error && <MessageBox variant= \"danger\">{error}</MessageBox> }\n                 */}\n                {/* Entering the name of the product */}\n                <div>\n                    <label htmlFor= \"productName\"> Product Name</label>\n                    <input \n                    type= \"text\" \n                    id= \"productName\" \n                    placeholder= \"Enter the added product name: \" \n                    required\n                    onChange= { (e)=> setProductName(e.target.value)}\n                    ></input>\n                </div>\n\n                {/* Entering the location of the product */}\n                <div>\n                    <label htmlFor= \"location\"> Enter Location</label>\n                    <input \n                    type= \"text\" \n                    id= \"location\" \n                    placeholder= \"Enter location of the product: \" \n                    required\n                    onChange= { (e)=> setLocation(e.target.value)}\n                    ></input>\n                </div>\n\n                {/* selecting the appropriate photo */}\n\n                {/* Entering the product's description */}\n                <div>\n                    <label htmlFor= \"description\"> Enter description of the Product</label>\n                    <input \n                    type= \"text\" \n                    id= \"description\" \n                    placeholder= \"Enter description \" \n                    required\n                    onChange= { (e)=> setDescription(e.target.value)}\n                    ></input>\n                </div>\n\n                {/* Entering the quantity of the product added by the producer */}\n                <div>\n                    <label htmlFor= \"countInStock\"> Count In Stock</label>\n                    <input \n                    type= \"number\" \n                    id= \"countInStock\" \n                    placeholder= \"Enter count of stock\" \n                    required\n                    onChange= { (e)=> setCountInStock(e.target.value)}\n                    ></input>\n                </div>\n\n                {/* Entering the price of the product. */}\n                <div>\n                    <label htmlFor= \"price\"> Prices</label>\n                    <input \n                    type= \"text\" \n                    id= \"price\" \n                    placeholder= \"Enter price of the product\" \n                    required\n                    onChange= { (e)=> setPrice(e.target.value)}\n                    ></input>\n                </div>\n\n                <div>\n                    <label for=\"img\">Select image:</label>\n                    <input \n                    type=\"file\" \n                    id=\"img\" \n                    name=\"img\" \n                    accept=\"image/*\"\n                    onChange= { (e)=> setImage(e.target.value)}\n                    ></input>\n                </div>\n              \n\n\n                <div>\n                    <label/>\n                    {/* adding a handler */}\n                    <button className = \"primary\" type = \"submit\">\n                        Add Product to the MarketPlace\n                    </button>\n                </div>\n                \n            </form>\n        </div>\n    )\n}","/Users/param/Desktop/marketplace/final/frontend/src/screens/HomeScreen.js",["121","122","123"],"import React, {useEffect, useState} from 'react';\nimport axios from 'axios';\nimport Product from '../components/Product';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { listProducts } from '../actions/productActions';\n\n\nexport default function HomeScreen() {\n    // // defining the hooks\n    const dispatch = useDispatch();\n    const productList  = useSelector(state => state.productList);\n    const {loading, error, products} = productList;\n\n    // runs only one time, sending an ajax request\n    useEffect(() => {\n        dispatch(listProducts());\n    }, []);\n    return(\n        <div>\n            { loading ? (\n                <LoadingBox></LoadingBox>\n            ) : error? (\n                <MessageBox variant=\"danger\">{error}</MessageBox>\n            ) : (\n                    <div className=\"row center\">\n                    {/* using products from backend */}\n                    {products.map(product => (\n                            <Product key={product._id} product={product}></Product>\n                              \n                ))}                    \n            </div>\n        )}       \n    </div>\n    );\n}","/Users/param/Desktop/marketplace/final/frontend/src/screens/SigninScreen.js",[],"/Users/param/Desktop/marketplace/final/frontend/src/screens/RegisterScreen.js",[],"/Users/param/Desktop/marketplace/final/frontend/src/reducers/productReducers.js",[],"/Users/param/Desktop/marketplace/final/frontend/src/actions/userActions.js",[],"/Users/param/Desktop/marketplace/final/frontend/src/reducers/userReducers.js",[],"/Users/param/Desktop/marketplace/final/frontend/src/reducers/cartReducers.js",[],"/Users/param/Desktop/marketplace/final/frontend/src/actions/cartActions.js",["124"],"/Users/param/Desktop/marketplace/final/frontend/src/actions/productActions.js",[],"/Users/param/Desktop/marketplace/final/frontend/src/components/LoadingBox.js",[],"/Users/param/Desktop/marketplace/final/frontend/src/components/MessageBox.js",[],"/Users/param/Desktop/marketplace/final/frontend/src/components/Product.js",[],"/Users/param/Desktop/marketplace/final/frontend/src/constants/productConstants.js",[],"/Users/param/Desktop/marketplace/final/frontend/src/constants/userConstants.js",[],"/Users/param/Desktop/marketplace/final/frontend/src/constants/cartConstants.js",[],{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","severity":1,"message":"130","line":6,"column":8,"nodeType":"131","messageId":"132","endLine":6,"endColumn":18},{"ruleId":"133","severity":1,"message":"134","line":57,"column":33,"nodeType":"135","endLine":57,"endColumn":64},{"ruleId":"136","severity":1,"message":"137","line":58,"column":61,"nodeType":"138","endLine":58,"endColumn":92},{"ruleId":"129","severity":1,"message":"139","line":2,"column":16,"nodeType":"131","messageId":"132","endLine":2,"endColumn":21},{"ruleId":"129","severity":1,"message":"140","line":8,"column":8,"nodeType":"131","messageId":"132","endLine":8,"endColumn":18},{"ruleId":"129","severity":1,"message":"141","line":9,"column":21,"nodeType":"131","messageId":"132","endLine":9,"endColumn":35},{"ruleId":"129","severity":1,"message":"142","line":18,"column":12,"nodeType":"131","messageId":"132","endLine":18,"endColumn":20},{"ruleId":"129","severity":1,"message":"143","line":18,"column":22,"nodeType":"131","messageId":"132","endLine":18,"endColumn":33},{"ruleId":"129","severity":1,"message":"144","line":5,"column":8,"nodeType":"131","messageId":"132","endLine":5,"endColumn":18},{"ruleId":"129","severity":1,"message":"130","line":6,"column":8,"nodeType":"131","messageId":"132","endLine":6,"endColumn":18},{"ruleId":"129","severity":1,"message":"145","line":19,"column":12,"nodeType":"131","messageId":"132","endLine":19,"endColumn":23},{"ruleId":"129","severity":1,"message":"146","line":21,"column":11,"nodeType":"131","messageId":"132","endLine":21,"endColumn":32},{"ruleId":"129","severity":1,"message":"147","line":26,"column":11,"nodeType":"131","messageId":"132","endLine":26,"endColumn":26},{"ruleId":"136","severity":1,"message":"137","line":54,"column":13,"nodeType":"138","endLine":54,"endColumn":46},{"ruleId":"129","severity":1,"message":"148","line":4,"column":8,"nodeType":"131","messageId":"132","endLine":4,"endColumn":18},{"ruleId":"129","severity":1,"message":"144","line":5,"column":8,"nodeType":"131","messageId":"132","endLine":5,"endColumn":18},{"ruleId":"129","severity":1,"message":"149","line":21,"column":11,"nodeType":"131","messageId":"132","endLine":21,"endColumn":19},{"ruleId":"129","severity":1,"message":"150","line":23,"column":11,"nodeType":"131","messageId":"132","endLine":23,"endColumn":21},{"ruleId":"151","severity":1,"message":"152","line":42,"column":5,"nodeType":"153","endLine":42,"endColumn":7,"suggestions":"154"},{"ruleId":"129","severity":1,"message":"155","line":1,"column":27,"nodeType":"131","messageId":"132","endLine":1,"endColumn":35},{"ruleId":"129","severity":1,"message":"156","line":2,"column":8,"nodeType":"131","messageId":"132","endLine":2,"endColumn":13},{"ruleId":"151","severity":1,"message":"157","line":19,"column":8,"nodeType":"153","endLine":19,"endColumn":10,"suggestions":"158"},{"ruleId":"129","severity":1,"message":"159","line":32,"column":12,"nodeType":"131","messageId":"132","endLine":32,"endColumn":16},"no-native-reassign",["160"],"no-negated-in-lhs",["161"],"no-unused-vars","'HomeScreen' is defined but never used.","Identifier","unusedVar","react/style-prop-object","Style prop value must be an object","JSXAttribute","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Route' is defined but never used.","'CartScreen' is defined but never used.","'removeFromCart' is defined but never used.","'location' is assigned a value but never used.","'setLocation' is assigned a value but never used.","'MessageBox' is defined but never used.","'itemsInCart' is assigned a value but never used.","'removeFromCartHandler' is assigned a value but never used.","'checkoutHandler' is assigned a value but never used.","'LoadingBox' is defined but never used.","'redirect' is assigned a value but never used.","'newProduct' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'countInStock', 'description', 'dispatch', 'location', 'price', and 'productName'. Either include them or remove the dependency array.","ArrayExpression",["162"],"'useState' is defined but never used.","'axios' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["163"],"'data' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"164","fix":"165"},{"desc":"166","fix":"167"},"Update the dependencies array to be: [countInStock, description, dispatch, location, price, productName]",{"range":"168","text":"169"},"Update the dependencies array to be: [dispatch]",{"range":"170","text":"171"},[1449,1451],"[countInStock, description, dispatch, location, price, productName]",[677,679],"[dispatch]"]