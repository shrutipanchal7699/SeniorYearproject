{"ast":null,"code":"import { CART_CHECKOUT, CART_ADD_ITEM, CART_REMOVE_ITEM } from \"../constants/cartConstants\"; // also replaced the if and else .\n// itemsInCart --> cartItems\n\nexport const cartReducer = (state = {\n  itemsInCart: []\n}, action) => {\n  switch (action.type) {\n    case CART_ADD_ITEM:\n      // item to be added -- const item\n      const itemToBeAdded = action.payload; // already in the cart -- const existItem\n\n      const itemAlreadyInCart = state.itemsInCart.find(x => x.product === itemToBeAdded.product); // if the product doesn't  exists in the cart, then add it to as a new item.\n\n      if (!itemAlreadyInCart) {\n        // adding new items\n        return { ...state,\n          itemsInCart: [...state.itemsInCart, itemToBeAdded]\n        };\n      } else {\n        //if the product already exists, then change the item numbers to the current selected one.\n        return { ...state,\n          itemsInCart: state.itemsInCart.map(x => x.product === itemAlreadyInCart.product ? itemToBeAdded : x)\n        };\n      }\n\n      ;\n\n    case CART_REMOVE_ITEM:\n      return { ...state,\n        itemsInCart: state.itemsInCart.filter(x => x.product !== action.payload)\n      };\n\n    case CART_CHECKOUT:\n      return { ...state,\n        itemsInCart: state.itemsInCart.filter(x => x.product !== action.payload)\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/param/Desktop/marketplace/final/frontend/src/reducers/cartReducers.js"],"names":["CART_CHECKOUT","CART_ADD_ITEM","CART_REMOVE_ITEM","cartReducer","state","itemsInCart","action","type","itemToBeAdded","payload","itemAlreadyInCart","find","x","product","map","filter"],"mappings":"AAAA,SAASA,aAAT,EAAuBC,aAAvB,EAAsCC,gBAAtC,QAA8D,4BAA9D,C,CAEA;AAEA;;AACA,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAG;AAACC,EAAAA,WAAW,EAAC;AAAb,CAAT,EAA2BC,MAA3B,KAAqC;AAC5D,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKN,aAAL;AACI;AACA,YAAMO,aAAa,GAAGF,MAAM,CAACG,OAA7B,CAFJ,CAGI;;AACA,YAAMC,iBAAiB,GAAGN,KAAK,CAACC,WAAN,CAAkBM,IAAlB,CAAwBC,CAAC,IAAIA,CAAC,CAACC,OAAF,KAAcL,aAAa,CAACK,OAAzD,CAA1B,CAJJ,CAMI;;AACA,UAAG,CAACH,iBAAJ,EAAsB;AAEjB;AACA,eAAO,EAAC,GAAGN,KAAJ;AACJC,UAAAA,WAAW,EAAE,CAAC,GAAGD,KAAK,CAACC,WAAV,EAAuBG,aAAvB;AADT,SAAP;AAGJ,OAND,MAOI;AAEA;AACA,eAAM,EACF,GAAGJ,KADD;AAEFC,UAAAA,WAAW,EAAED,KAAK,CAACC,WAAN,CAAkBS,GAAlB,CAAuBF,CAAC,IAAIA,CAAC,CAACC,OAAF,KAAaH,iBAAiB,CAACG,OAA/B,GAAyCL,aAAzC,GAAyDI,CAArF;AAFX,SAAN;AAIH;;AAAA;;AAEL,SAAKV,gBAAL;AACI,aAAO,EAAE,GAAGE,KAAL;AAAYC,QAAAA,WAAW,EAAED,KAAK,CAACC,WAAN,CAAkBU,MAAlB,CAA2BH,CAAD,IAAOA,CAAC,CAACC,OAAF,KAAcP,MAAM,CAACG,OAAtD;AAAzB,OAAP;;AAEJ,SAAKT,aAAL;AACI,aAAO,EAAC,GAAGI,KAAJ;AAAWC,QAAAA,WAAW,EAAED,KAAK,CAACC,WAAN,CAAkBU,MAAlB,CAA2BH,CAAD,IAAOA,CAAC,CAACC,OAAF,KAAcP,MAAM,CAACG,OAAtD;AAAxB,OAAP;;AACJ;AACI,aAAOL,KAAP;AA9BR;AAgCH,CAjCM","sourcesContent":["import { CART_CHECKOUT,CART_ADD_ITEM, CART_REMOVE_ITEM } from \"../constants/cartConstants\";\n\n// also replaced the if and else .\n\n// itemsInCart --> cartItems\nexport const cartReducer = (state = {itemsInCart:[]}, action) =>{\n    switch(action.type) {\n        case CART_ADD_ITEM:\n            // item to be added -- const item\n            const itemToBeAdded = action.payload;\n            // already in the cart -- const existItem\n            const itemAlreadyInCart = state.itemsInCart.find( x => x.product === itemToBeAdded.product);\n            \n            // if the product doesn't  exists in the cart, then add it to as a new item.\n            if(!itemAlreadyInCart){\n                \n                 // adding new items\n                 return {...state, \n                    itemsInCart: [...state.itemsInCart, itemToBeAdded]};\n\n            }\n            else{\n               \n                //if the product already exists, then change the item numbers to the current selected one.\n                return{\n                    ...state,\n                    itemsInCart: state.itemsInCart.map( x => x.product ===itemAlreadyInCart.product ? itemToBeAdded : x),\n                };\n            };\n\n        case CART_REMOVE_ITEM:\n            return { ...state, itemsInCart: state.itemsInCart.filter( (x) => x.product !== action.payload),\n            };\n        case CART_CHECKOUT:\n            return {...state, itemsInCart: state.itemsInCart.filter( (x) => x.product !== action.payload),}\n        default:\n            return state;\n    }\n};"]},"metadata":{},"sourceType":"module"}