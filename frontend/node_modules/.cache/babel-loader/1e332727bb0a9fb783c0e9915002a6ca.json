{"ast":null,"code":"import { CART_CHECKOUT, CART_ADD_ITEM, CART_REMOVE_ITEM } from \"../constants/cartConstants\";\nimport Axios from \"axios\";\nexport const addToCart = (product_id, quantity) => async (dispatch, getState) => {\n  //sending an ajax request to server to get the info of the resp product_id.\n  const {\n    data\n  } = await Axios.get(`http://localhost:5000/products/${product_id}`); //requesting to add the below product to the Cart.\n\n  dispatch({\n    type: CART_ADD_ITEM,\n    payload: {\n      name: data.name,\n      image: data.image,\n      price: data.price,\n      countInStock: data.countInStock,\n      location: data.location,\n      product: data._id,\n      quantity\n    }\n  }); // saving whatever is in the cart to the local Storage.\n\n  localStorage.setItem('itemsInCart', JSON.stringify(getState().cart.itemsInCart));\n}; // checkout\n\nexport const checkout = () => async (dispatch, getState) => {\n  console.log(localStorage.getItem(\"itemsInCart\"));\n  const currToken = localStorage.getItem(\"userToken\");\n  const {\n    data\n  } = await Axios.post(`/products/checkout`, {\n    al_products: localStorage.getItem(\"itemsInCart\")\n  }, {\n    headers: {\n      'authorization': 'bearer '.concat(currToken)\n    }\n  });\n  localStorage.removeItem(\"itemsInCart\");\n  dispatch({\n    type: CART_CHECKOUT,\n    payload: localStorage.getItem(\"itemsInCart\")\n  });\n  localStorage.setItem('itemsInCart', JSON.stringify(getState().cart.itemsInCart));\n}; //adding removing from cart.\n\nexport const removeFromCart = product_id => (dispatch, getState) => {\n  dispatch({\n    type: CART_REMOVE_ITEM,\n    payload: product_id\n  });\n  localStorage.setItem('itemsInCart', JSON.stringify(getState().cart.itemsInCart));\n};","map":{"version":3,"sources":["/Users/param/Desktop/marketplace/final/frontend/src/actions/cartActions.js"],"names":["CART_CHECKOUT","CART_ADD_ITEM","CART_REMOVE_ITEM","Axios","addToCart","product_id","quantity","dispatch","getState","data","get","type","payload","name","image","price","countInStock","location","product","_id","localStorage","setItem","JSON","stringify","cart","itemsInCart","checkout","console","log","getItem","currToken","post","al_products","headers","concat","removeItem","removeFromCart"],"mappings":"AAAA,SAAQA,aAAR,EAAsBC,aAAtB,EAAqCC,gBAArC,QAA6D,4BAA7D;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,OAAO,MAAMC,SAAS,GAAG,CAACC,UAAD,EAAaC,QAAb,KAA0B,OAAMC,QAAN,EAAgBC,QAAhB,KAA4B;AAC3E;AACA,QAAM;AAACC,IAAAA;AAAD,MAAS,MAAMN,KAAK,CAACO,GAAN,CAAW,kCAAiCL,UAAW,EAAvD,CAArB,CAF2E,CAI3E;;AACAE,EAAAA,QAAQ,CAAC;AACLI,IAAAA,IAAI,EAAEV,aADD;AAELW,IAAAA,OAAO,EAAC;AACJC,MAAAA,IAAI,EAAEJ,IAAI,CAACI,IADP;AAEJC,MAAAA,KAAK,EAAEL,IAAI,CAACK,KAFR;AAGJC,MAAAA,KAAK,EAAEN,IAAI,CAACM,KAHR;AAIJC,MAAAA,YAAY,EAAEP,IAAI,CAACO,YAJf;AAKJC,MAAAA,QAAQ,EAAER,IAAI,CAACQ,QALX;AAMJC,MAAAA,OAAO,EAAET,IAAI,CAACU,GANV;AAOJb,MAAAA;AAPI;AAFH,GAAD,CAAR,CAL2E,CAkB3E;;AACAc,EAAAA,YAAY,CAACC,OAAb,CAAqB,aAArB,EAAoCC,IAAI,CAACC,SAAL,CAAef,QAAQ,GAAGgB,IAAX,CAAgBC,WAA/B,CAApC;AAGH,CAtBM,C,CAuBP;;AACA,OAAO,MAAMC,QAAQ,GAAG,MAAM,OAAMnB,QAAN,EAAgBC,QAAhB,KAA4B;AACtDmB,EAAAA,OAAO,CAACC,GAAR,CAAYR,YAAY,CAACS,OAAb,CAAqB,aAArB,CAAZ;AACA,QAAMC,SAAS,GAAGV,YAAY,CAACS,OAAb,CAAqB,WAArB,CAAlB;AACA,QAAM;AAACpB,IAAAA;AAAD,MAAS,MAAMN,KAAK,CAAC4B,IAAN,CAAY,oBAAZ,EACrB;AACGC,IAAAA,WAAW,EAAEZ,YAAY,CAACS,OAAb,CAAqB,aAArB;AADhB,GADqB,EAInB;AAACI,IAAAA,OAAO,EAAE;AACA,uBAAkB,UAAUC,MAAV,CAAiBJ,SAAjB;AADlB;AAAV,GAJmB,CAArB;AAOAV,EAAAA,YAAY,CAACe,UAAb,CAAwB,aAAxB;AAEA5B,EAAAA,QAAQ,CAAC;AAACI,IAAAA,IAAI,EAAEX,aAAP;AAAsBY,IAAAA,OAAO,EAAEQ,YAAY,CAACS,OAAb,CAAqB,aAArB;AAA/B,GAAD,CAAR;AACAT,EAAAA,YAAY,CAACC,OAAb,CAAqB,aAArB,EAAmCC,IAAI,CAACC,SAAL,CAAef,QAAQ,GAAGgB,IAAX,CAAgBC,WAA/B,CAAnC;AACH,CAdM,C,CAgBP;;AACA,OAAO,MAAMW,cAAc,GAAI/B,UAAD,IAAgB,CAACE,QAAD,EAAWC,QAAX,KAAuB;AACjED,EAAAA,QAAQ,CAAC;AAACI,IAAAA,IAAI,EAAET,gBAAP;AAAyBU,IAAAA,OAAO,EAAEP;AAAlC,GAAD,CAAR;AACAe,EAAAA,YAAY,CAACC,OAAb,CAAqB,aAArB,EAAmCC,IAAI,CAACC,SAAL,CAAef,QAAQ,GAAGgB,IAAX,CAAgBC,WAA/B,CAAnC;AACH,CAHM","sourcesContent":["import {CART_CHECKOUT,CART_ADD_ITEM, CART_REMOVE_ITEM } from \"../constants/cartConstants\";\nimport Axios from \"axios\";\n\n\nexport const addToCart = (product_id, quantity) => async(dispatch, getState) =>{\n    //sending an ajax request to server to get the info of the resp product_id.\n    const {data} = await Axios.get(`http://localhost:5000/products/${product_id}`);\n\n    //requesting to add the below product to the Cart.\n    dispatch({\n        type: CART_ADD_ITEM,\n        payload:{\n            name: data.name,\n            image: data.image,\n            price: data.price,\n            countInStock: data.countInStock,\n            location: data.location,\n            product: data._id,\n            quantity,\n        },\n    });\n    \n    // saving whatever is in the cart to the local Storage.\n    localStorage.setItem('itemsInCart', JSON.stringify(getState().cart.itemsInCart));\n\n\n};\n// checkout\nexport const checkout = () => async(dispatch, getState) =>{\n    console.log(localStorage.getItem(\"itemsInCart\"))\n    const currToken = localStorage.getItem(\"userToken\");\n    const {data} = await Axios.post(`/products/checkout`,\n    {\n       al_products: localStorage.getItem(\"itemsInCart\"),\n         \n    },{headers: {\n                'authorization' : 'bearer '.concat(currToken) ,\n            }});\n    localStorage.removeItem(\"itemsInCart\");\n\n    dispatch({type: CART_CHECKOUT, payload: localStorage.getItem(\"itemsInCart\")});\n    localStorage.setItem('itemsInCart',JSON.stringify(getState().cart.itemsInCart));\n}\n\n//adding removing from cart.\nexport const removeFromCart = (product_id) => (dispatch, getState) =>{\n    dispatch({type: CART_REMOVE_ITEM, payload: product_id});\n    localStorage.setItem('itemsInCart',JSON.stringify(getState().cart.itemsInCart));\n}"]},"metadata":{},"sourceType":"module"}