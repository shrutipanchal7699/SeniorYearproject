{"ast":null,"code":"import Axios from \"axios\";\nimport { USER_SIGNIN_REQUEST, USER_SIGNIN_FAIL, USER_SIGNIN_SUCCESS, USER_SIGNOUT, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL } from \"../constants/userConstants\";\nexport const signin = (email, password) => async dispatch => {\n  dispatch({\n    type: USER_SIGNIN_REQUEST,\n    payload: {\n      email,\n      password\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.post('http://localhost:5000/user/login', {\n      email,\n      password\n    });\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n    localStorage.setItem(\"userToken\", data.token); //const dataTemp = localStorage.getItem(\"userToken\");\n    //console.log(dataTemp)\n  } catch (error) {\n    dispatch({\n      type: USER_SIGNIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const register = (name, email, password, location, certification) => async dispatch => {\n  dispatch({\n    type: USER_REGISTER_REQUEST,\n    payload: {\n      name,\n      email,\n      password,\n      location,\n      certification\n    }\n  });\n\n  try {\n    // const {data}= await Axios.post('/api/users/register', {name, email, password});\n    console.log(name + \"  \" + email + \" \" + location + \" \" + certification);\n    const {\n      data\n    } = await Axios.post('http://localhost:5000/user/signup', {\n      name,\n      email,\n      password,\n      location,\n      certification\n    });\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const signout = () => dispatch => {\n  localStorage.removeItem('userInfo');\n  localStorage.removeItem('cartItems');\n  dispatch({\n    type: USER_SIGNOUT\n  });\n};","map":{"version":3,"sources":["/Users/param/Desktop/marketplace/final/frontend/src/actions/userActions.js"],"names":["Axios","USER_SIGNIN_REQUEST","USER_SIGNIN_FAIL","USER_SIGNIN_SUCCESS","USER_SIGNOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","signin","email","password","dispatch","type","payload","data","post","localStorage","setItem","JSON","stringify","token","error","response","message","register","name","location","certification","console","log","signout","removeItem"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,mBAAT,EAA8BC,gBAA9B,EAAgDC,mBAAhD,EAAqEC,YAArE,EAAmFC,qBAAnF,EAA0GC,qBAA1G,EAAiIC,kBAAjI,QAA2J,4BAA3J;AAEA,OAAO,MAAMC,MAAM,GAAE,CAACC,KAAD,EAAQC,QAAR,KAAqB,MAAOC,QAAP,IAAoB;AAC1DA,EAAAA,QAAQ,CAAC;AAACC,IAAAA,IAAI,EAAEX,mBAAP;AAA4BY,IAAAA,OAAO,EAAE;AAACJ,MAAAA,KAAD;AAAQC,MAAAA;AAAR;AAArC,GAAD,CAAR;;AACA,MAAG;AACC,UAAM;AAACI,MAAAA;AAAD,QAAQ,MAAMd,KAAK,CAACe,IAAN,CAAW,kCAAX,EAA+C;AAACN,MAAAA,KAAD;AAAQC,MAAAA;AAAR,KAA/C,CAApB;AACAC,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAET,mBAAP;AAA4BU,MAAAA,OAAO,EAAEC;AAArC,KAAD,CAAR;AACAE,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeL,IAAf,CAAjC;AACAE,IAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCH,IAAI,CAACM,KAAvC,EAJD,CAMC;AACA;AAEH,GATD,CASE,OAAOC,KAAP,EAAa;AACXV,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEV,gBAAR;AACTW,MAAAA,OAAO,EACPQ,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,OAAtC,GACcF,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,OADlC,GAEcF,KAAK,CAACE;AAJX,KAAD,CAAR;AAMH;AAEJ,CApBM;AAsBP,OAAO,MAAMC,QAAQ,GAAE,CAACC,IAAD,EAAOhB,KAAP,EAAaC,QAAb,EAAsBgB,QAAtB,EAA+BC,aAA/B,KAAiD,MAAOhB,QAAP,IAAoB;AACxFA,EAAAA,QAAQ,CAAC;AAACC,IAAAA,IAAI,EAAEP,qBAAP;AAA8BQ,IAAAA,OAAO,EAAE;AAACY,MAAAA,IAAD;AAAOhB,MAAAA,KAAP;AAAaC,MAAAA,QAAb;AAAsBgB,MAAAA,QAAtB;AAA+BC,MAAAA;AAA/B;AAAvC,GAAD,CAAR;;AACA,MAAG;AACC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAI,GAAE,IAAN,GAAYhB,KAAZ,GAAoB,GAApB,GAAyBiB,QAAzB,GAAoC,GAApC,GAAwCC,aAApD;AACA,UAAM;AAACb,MAAAA;AAAD,QAAQ,MAAMd,KAAK,CAACe,IAAN,CAAW,mCAAX,EAAgD;AAACU,MAAAA,IAAD;AAAOhB,MAAAA,KAAP;AAAaC,MAAAA,QAAb;AAAsBgB,MAAAA,QAAtB;AAA+BC,MAAAA;AAA/B,KAAhD,CAApB;AACAhB,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEN,qBAAP;AAA8BO,MAAAA,OAAO,EAAEC;AAAvC,KAAD,CAAR;AACAH,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAET,mBAAP;AAA4BU,MAAAA,OAAO,EAAEC;AAArC,KAAD,CAAR;AAEAE,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeL,IAAf,CAAjC;AAEH,GATD,CASE,OAAOO,KAAP,EAAa;AACXV,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEL,kBAAR;AACTM,MAAAA,OAAO,EACPQ,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,OAAtC,GACcF,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,OADlC,GAEcF,KAAK,CAACE;AAJX,KAAD,CAAR;AAMH;AAEJ,CApBM;AAsBP,OAAO,MAAMO,OAAO,GAAG,MAAOnB,QAAD,IAAc;AACvCK,EAAAA,YAAY,CAACe,UAAb,CAAwB,UAAxB;AACAf,EAAAA,YAAY,CAACe,UAAb,CAAwB,WAAxB;AACApB,EAAAA,QAAQ,CAAC;AAACC,IAAAA,IAAI,EAAER;AAAP,GAAD,CAAR;AACH,CAJM","sourcesContent":["import Axios from \"axios\";\nimport { USER_SIGNIN_REQUEST, USER_SIGNIN_FAIL, USER_SIGNIN_SUCCESS, USER_SIGNOUT, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL } from \"../constants/userConstants\"\n\nexport const signin= (email, password) => async (dispatch) => {\n    dispatch({type: USER_SIGNIN_REQUEST, payload: {email, password}});\n    try{\n        const {data}= await Axios.post('http://localhost:5000/user/login', {email, password});\n        dispatch({type: USER_SIGNIN_SUCCESS, payload: data});\n        localStorage.setItem(\"userInfo\", JSON.stringify(data));\n        localStorage.setItem(\"userToken\", data.token);\n\n        //const dataTemp = localStorage.getItem(\"userToken\");\n        //console.log(dataTemp)\n\n    } catch (error){\n        dispatch({ type: USER_SIGNIN_FAIL, \n        payload:\n        error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n     });\n    }\n\n};\n\nexport const register= (name, email,password,location,certification) => async (dispatch) => {\n    dispatch({type: USER_REGISTER_REQUEST, payload: {name, email,password,location,certification}});\n    try{\n        // const {data}= await Axios.post('/api/users/register', {name, email, password});\n        console.log(name +\"  \"+ email + \" \"+ location + \" \"+certification );\n        const {data}= await Axios.post('http://localhost:5000/user/signup', {name, email,password,location,certification});\n        dispatch({type: USER_REGISTER_SUCCESS, payload: data});\n        dispatch({type: USER_SIGNIN_SUCCESS, payload: data});\n\n        localStorage.setItem(\"userInfo\", JSON.stringify(data));\n\n    } catch (error){\n        dispatch({ type: USER_REGISTER_FAIL, \n        payload:\n        error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n     });\n    }\n\n};\n\nexport const signout = () => (dispatch) => {\n    localStorage.removeItem('userInfo');\n    localStorage.removeItem('cartItems');\n    dispatch({type: USER_SIGNOUT});\n}"]},"metadata":{},"sourceType":"module"}